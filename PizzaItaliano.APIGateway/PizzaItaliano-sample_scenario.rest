@api = http://localhost:5000 

#PRODUCTS
@productId = 10000000-0000-0000-0000-000000000000
@name = Pizza
@cost = 20.51

#ORDERS
@orderId = 10000000-0000-0000-0000-000000000000
@orderProductId = 10000000-0000-0000-0000-000000000000
@quantity = 1

#RELEASES
@releaseId = 10000000-0000-0000-0000-000000000000

#PAYMENTS
@paymentId = 10000000-0000-0000-0000-000000000000
@token = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1YWRlNTZjZDc2ZDQ0OGE1ODA0YmYzYmEwMzNlMTM2ZCIsInVuaXF1ZV9uYW1lIjoiNWFkZTU2Y2Q3NmQ0NDhhNTgwNGJmM2JhMDMzZTEzNmQiLCJqdGkiOiJhOTgxNmM1My04N2I0LTQyMzItOWUyMS1hM2U3YzdiOTQ1MWEiLCJpYXQiOiIxNjU2OTY4OTU1IiwiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2NsYWltcy9yb2xlIjoiYWRtaW4iLCJuYmYiOjE2NTY5Njg5NTUsImV4cCI6MTY1Njk3MjU1NSwiaXNzIjoicGl6emEtaXRhbGlhbm8ifQ.B09_M84XJjGJvKPmq5gnnzD1iODlpwEgbwVIht4kCIg

### At first, check all products
GET {{api}}/products

### Add product
# @name add_product_operation
POST {{api}}/products
Content-Type: application/json

{
  "productId": "{{productId}}",
  "name": "{{name}}",
  "cost": {{cost}}
}

### ### check operation async gateway -> script start-async.sh
@operationAddProductId = {{add_product_operation.response.headers.Request-ID}}
{{api}}/operations/{{operationAddProductId}}

### check if exists
GET {{api}}/products/{{productId}}

### check orders
GET {{api}}/orders

### Create an order
# @name add_order_operation
POST {{api}}/orders
Content-Type: application/json

{
  "orderId": "{{orderId}}"
}


###
GET http://localhost:5000/orders/my
Authorization: Bearer {{token}}

### ### check operation async gateway -> script start-async.sh
@operationAddOrderId = {{add_order_operation.response.headers.Request-ID}}
{{api}}/operations/{{operationAddOrderId}}

### Check order if exits
GET {{api}}/orders/{{orderId}}

### Add products to order
# @name add_order_product_operation
POST {{api}}/orders/order-product
Content-Type: application/json

{
  "orderId": "{{orderId}}",
  "orderProductId": "{{orderProductId}}",
  "productId": "{{productId}}",
  "quantity": {{quantity}}
}

### ### check operation async gateway -> script start-async.sh
@operationAddOrderProductId = {{add_order_product_operation.response.headers.Request-ID}}
{{api}}/operations/{{operationAddOrderProductId}}

### Check order
GET {{api}}/orders/{{orderId}}

### Set order ready
# @name change_status_order_operation
PUT {{api}}/orders
Content-Type: application/json

{
  "orderId": "{{orderId}}"
}

### check operation async gateway -> script start-async.sh
@operationSetOrderStatusId = {{change_status_order_operation.response.headers.Request-ID}}
{{api}}/operations/{{operationSetOrderStatusId}}

### Check order
# @name order_after_set_ready
GET {{api}}/orders/{{orderId}}

@cost = {{order_after_set_ready.response.body.cost}}

### check payments
GET {{api}}/payments

### Add payment
POST {{api}}/payments
Content-Type: application/json

{
  "paymentId": "{{paymentId}}",
  "cost": {{cost}},
  "orderId": "{{orderId}}"
}

### Paid for order
PUT {{api}}/payments
Content-Type: application/json

{
  "paymentId": "{{paymentId}}"
}

### Check order
GET {{api}}/orders/{{orderId}}

### Relase product
# @name release_product
POST {{api}}/releases
Content-Type: application/json

{
  "releaseId": "{{releaseId}}",
  "orderId": "{{orderId}}",
  "orderProductId": "{{orderProductId}}"
}

### check operation async gateway -> script start-async.sh
@operationReleaseOrderId = {{release_product.response.headers.Request-ID}}
{{api}}/operations/{{operationReleaseOrderId}}

### Check order
GET {{api}}/orders/{{orderId}}